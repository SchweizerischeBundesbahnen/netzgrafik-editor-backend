on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: maven

  release:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Create container image
        env:
          IMAGE_ID: ghcr.io/${{ github.repository }}
          VERSION: ${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}
          MAJOR: ${{ needs.release-please.outputs.major }}
          MINOR: ${{ needs.release-please.outputs.minor }}
        run: |
          # Convert to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo "Building ${IMAGE_ID}:${VERSION}"

          mvn spring-boot:build-image \
            -Dmaven.test.skip=true \
            -Dspring-boot.build-image.imageName=$IMAGE_ID:$VERSION

          docker tag $IMAGE_ID:$VERSION $IMAGE_ID:$MAJOR.$MINOR
          docker tag $IMAGE_ID:$VERSION $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$MAJOR.$MINOR
          docker push $IMAGE_ID:latest
